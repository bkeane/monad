name: deploy

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  integration:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: setup
        uses: ./.github/actions/integration
      - name: build
        working-directory: e2e/echo
        run: |
          docker buildx build --build-context echo=./e2e/echo -t $(monad ecr tag) \
          --platform linux/arm64,linux/amd64 \
          --cache-to type=s3,region=us-west-2,bucket=kaixo-buildx-cache,name=echo,mode=max \
          --cache-from type=s3,region=us-west-2,bucket=kaixo-buildx-cache,name=echo \
          --push .

  deployment:
    needs: integration
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        account: [dev, prod]
    environment:
      name: ${{ matrix.account }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: setup
        uses: ./.github/actions/deployment
        with:
          account: ${{ matrix.account }}
      - name: deploy
        working-directory: e2e/echo
        run: |
          monad deploy \
            --env file://.env.tmpl \
            --policy file://policy.json.tmpl \
            --rule file://rule.json.tmpl \
            --memory 256 \
            --disk 1024 \
            --timeout 10 \
            --api kaixo

  e2e:
    runs-on: ubuntu-latest
    needs: deployment
    env:
      TERM: xterm-color
      MONAD_SERVICE: echo
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        account: [dev, prod]
    environment:
      name: ${{ matrix.account }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: setup shellspec
        uses: ./.github/actions/e2e
      - name: setup monad
        uses: ./.github/actions/deployment
        with:
          account: ${{ matrix.account }}
      - name: health
        working-directory: e2e
        run: shellspec --color spec/health/sigv4_spec.sh
      - name: lambda
        working-directory: e2e
        run: shellspec --color spec/config/lambda_spec.sh
      - name: apigatewayv2
        working-directory: e2e
        run: shellspec --color spec/config/apigatewayv2_spec.sh
      - name: eventbridge
        working-directory: e2e
        run: shellspec --color spec/config/eventbridge_spec.sh
