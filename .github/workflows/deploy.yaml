name: deploy

on:
  push:
    branches:
      - main
  pull_request:

env:
  RELEVANT_SHA: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
  RELEVANT_BRANCH: ${{ github.head_ref || github.ref_name }}

jobs:
  integration:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
      id-token: write
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ env.RELEVANT_BRANCH }}

      - name: setup docker
        uses: ./.github/actions/docker

      - name: ecr login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: setup monad
        uses: bkeane/monad-action@v0.1.4
        with:
          ecr_registry_id: 677771948337
          ecr_registry_region: us-west-2

      - name: setup stage
        uses: ./.github/actions/stages
        with:
          stage: build
          account: prod

      - name: build
        run: |
          TAG=$(monad ecr tag --service echo) \
          docker buildx bake --push

  deployment:
    needs: integration
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        account: [dev, prod]
    environment:
      name: ${{ matrix.account }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ env.RELEVANT_BRANCH }}
      
      - name: setup stage
        uses: ./.github/actions/stages
        with:
          stage: deploy
          account: ${{ matrix.account }}
      
      - name: monad-action
        uses: bkeane/monad-action@v0.1.4
        with:
          ecr_registry_id: 677771948337
          ecr_registry_region: us-west-2

      - name: deploy
        working-directory: e2e/echo
        run: |
          monad deploy \
            --env file://.env.tmpl \
            --policy file://policy.json.tmpl \
            --rule file://rule.json.tmpl \
            --memory 256 \
            --disk 1024 \
            --timeout 10 \
            --api kaixo

  e2e:
    runs-on: ubuntu-24.04-arm
    needs: deployment
    env:
      TERM: xterm-color
      MONAD_SERVICE: echo
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        account: [dev, prod]
    environment:
      name: ${{ matrix.account }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ env.RELEVANT_BRANCH }}

      - name: setup stage
        uses: ./.github/actions/stages
        with:
          stage: e2e
          account: ${{ matrix.account }}

      - name: setup shellspec
        uses: ./.github/actions/shellspec
        
      - name: health
        working-directory: e2e
        run: shellspec --color spec/health/sigv4_spec.sh

      - name: lambda
        working-directory: e2e
        run: shellspec --color spec/config/lambda_spec.sh

      - name: apigatewayv2
        working-directory: e2e
        run: shellspec --color spec/config/apigatewayv2_spec.sh

      - name: eventbridge
        working-directory: e2e
        run: shellspec --color spec/config/eventbridge_spec.sh
