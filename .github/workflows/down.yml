"env":
  "MONAD_BOUNDARY_POLICY": "monad-boundary-policy"
  "MONAD_BRANCH": "${{ github.head_ref || github.ref_name }}"
  "MONAD_REGISTRY_ID": "677771948337"
  "MONAD_REGISTRY_REGION": "us-west-2"
  "MONAD_SHA": "${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha
    || github.sha }}"
"jobs":
  "destroy-dev-echo":
    "env":
      "MONAD_SERVICE": "echo"
    "if": "needs.dev.outputs.pass == 'true'"
    "name": "destroy echo"
    "needs": "dev"
    "permissions":
      "contents": "read"
      "id-token": "write"
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "setup"
      "uses": "bkeane/monad-action@main"
      "with":
        "registry_id": "${{ env.MONAD_REGISTRY_ID }}"
        "registry_region": "${{ env.MONAD_REGISTRY_REGION }}"
        "role_arn": "${{ needs.dev.outputs.roleArn }}"
        "version": "latest"
    - "name": "destroy"
      "run": "monad destroy"
  "destroy-dev-echo-oauth":
    "env":
      "MONAD_SERVICE": "echo-oauth"
    "if": "needs.dev.outputs.pass == 'true'"
    "name": "destroy echo-oauth"
    "needs": "dev"
    "permissions":
      "contents": "read"
      "id-token": "write"
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "setup"
      "uses": "bkeane/monad-action@main"
      "with":
        "registry_id": "${{ env.MONAD_REGISTRY_ID }}"
        "registry_region": "${{ env.MONAD_REGISTRY_REGION }}"
        "role_arn": "${{ needs.dev.outputs.roleArn }}"
        "version": "latest"
    - "name": "destroy"
      "run": "monad destroy"
  "destroy-dev-echo-vpc":
    "env":
      "MONAD_SERVICE": "echo-vpc"
    "if": "needs.dev.outputs.pass == 'true'"
    "name": "destroy echo-vpc"
    "needs": "dev"
    "permissions":
      "contents": "read"
      "id-token": "write"
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "setup"
      "uses": "bkeane/monad-action@main"
      "with":
        "registry_id": "${{ env.MONAD_REGISTRY_ID }}"
        "registry_region": "${{ env.MONAD_REGISTRY_REGION }}"
        "role_arn": "${{ needs.dev.outputs.roleArn }}"
        "version": "latest"
    - "name": "destroy"
      "run": "monad destroy"
  "destroy-prod-echo":
    "env":
      "MONAD_SERVICE": "echo"
    "if": "needs.prod.outputs.pass == 'true'"
    "name": "destroy echo"
    "needs": "prod"
    "permissions":
      "contents": "read"
      "id-token": "write"
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "setup"
      "uses": "bkeane/monad-action@main"
      "with":
        "registry_id": "${{ env.MONAD_REGISTRY_ID }}"
        "registry_region": "${{ env.MONAD_REGISTRY_REGION }}"
        "role_arn": "${{ needs.prod.outputs.roleArn }}"
        "version": "latest"
    - "name": "destroy"
      "run": "monad destroy"
  "destroy-prod-echo-oauth":
    "env":
      "MONAD_SERVICE": "echo-oauth"
    "if": "needs.prod.outputs.pass == 'true'"
    "name": "destroy echo-oauth"
    "needs": "prod"
    "permissions":
      "contents": "read"
      "id-token": "write"
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "setup"
      "uses": "bkeane/monad-action@main"
      "with":
        "registry_id": "${{ env.MONAD_REGISTRY_ID }}"
        "registry_region": "${{ env.MONAD_REGISTRY_REGION }}"
        "role_arn": "${{ needs.prod.outputs.roleArn }}"
        "version": "latest"
    - "name": "destroy"
      "run": "monad destroy"
  "destroy-prod-echo-vpc":
    "env":
      "MONAD_SERVICE": "echo-vpc"
    "if": "needs.prod.outputs.pass == 'true'"
    "name": "destroy echo-vpc"
    "needs": "prod"
    "permissions":
      "contents": "read"
      "id-token": "write"
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "setup"
      "uses": "bkeane/monad-action@main"
      "with":
        "registry_id": "${{ env.MONAD_REGISTRY_ID }}"
        "registry_region": "${{ env.MONAD_REGISTRY_REGION }}"
        "role_arn": "${{ needs.prod.outputs.roleArn }}"
        "version": "latest"
    - "name": "destroy"
      "run": "monad destroy"
  "dev":
    "name": "dev"
    "outputs":
      "pass": "${{ steps.branch-check.outputs.pass }}"
      "roleArn": "${{ steps.branch-check.outputs.roleArn }}"
    "permissions":
      "contents": "read"
      "id-token": "write"
    "runs-on": "ubuntu-latest"
    "steps":
    - "env":
        "ACCOUNT_BRANCHES": "*"
        "ACCOUNT_ROLE_ARN": "arn:aws:iam::831926600600:role/monad-spoke-oidc-role"
      "id": "branch-check"
      "uses": "actions/github-script@v7"
      "with":
        "script": |
          const branch = process.env.MONAD_BRANCH;
          const accepted = process.env.ACCOUNT_BRANCHES.split(',').map(b => b.trim());
          const pass = accepted.includes("*") || accepted.includes(branch)
          console.log("branch:", branch);
          console.log("accepted:", accepted);
          console.log("deploy:", pass);
          core.setOutput("pass", pass);
          core.setOutput("roleArn", process.env.ACCOUNT_ROLE_ARN);
  "prod":
    "name": "prod"
    "outputs":
      "pass": "${{ steps.branch-check.outputs.pass }}"
      "roleArn": "${{ steps.branch-check.outputs.roleArn }}"
    "permissions":
      "contents": "read"
      "id-token": "write"
    "runs-on": "ubuntu-latest"
    "steps":
    - "env":
        "ACCOUNT_BRANCHES": "main"
        "ACCOUNT_ROLE_ARN": "arn:aws:iam::677771948337:role/monad-spoke-oidc-role"
      "id": "branch-check"
      "uses": "actions/github-script@v7"
      "with":
        "script": |
          const branch = process.env.MONAD_BRANCH;
          const accepted = process.env.ACCOUNT_BRANCHES.split(',').map(b => b.trim());
          const pass = accepted.includes("*") || accepted.includes(branch)
          console.log("branch:", branch);
          console.log("accepted:", accepted);
          console.log("deploy:", pass);
          core.setOutput("pass", pass);
          core.setOutput("roleArn", process.env.ACCOUNT_ROLE_ARN);
"name": "Down"
"on":
  "workflow_call": {}
