"env":
  "MONAD_BOUNDARY_POLICY": "monad-boundary-policy"
  "MONAD_BRANCH": "${{ github.head_ref || github.ref_name }}"
  "MONAD_REGISTRY_ID": "677771948337"
  "MONAD_REGISTRY_REGION": "us-west-2"
  "MONAD_SHA": "${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha
    || github.sha }}"
"jobs":
  "deploy-dev-echo":
    "env":
      "MONAD_SERVICE": "echo"
    "if": "needs.dev.outputs.pass == 'true'"
    "name": "deploy echo"
    "needs": "dev"
    "permissions":
      "contents": "read"
      "id-token": "write"
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "dev spoke config"
      "uses": "bkeane/monad-action@main"
      "with":
        "registry_id": "${{ env.MONAD_REGISTRY_ID }}"
        "registry_region": "${{ env.MONAD_REGISTRY_REGION }}"
        "role_arn": "${{ needs.dev.outputs.roleArn }}"
        "version": "latest"
    - "name": "deploy echo to dev"
      "run": "monad deploy --image bkeane/monad/echo --disk 1024 --memory 256 --timeout
        10 --api kaixo --policy file://e2e/echo/policy.json.tmpl --rule file://e2e/echo/rule.json.tmpl
        --env file://e2e/echo/.env.tmpl"
  "deploy-dev-echo-oauth":
    "env":
      "MONAD_SERVICE": "echo-oauth"
    "if": "needs.dev.outputs.pass == 'true'"
    "name": "deploy echo-oauth"
    "needs": "dev"
    "permissions":
      "contents": "read"
      "id-token": "write"
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "dev spoke config"
      "uses": "bkeane/monad-action@main"
      "with":
        "registry_id": "${{ env.MONAD_REGISTRY_ID }}"
        "registry_region": "${{ env.MONAD_REGISTRY_REGION }}"
        "role_arn": "${{ needs.dev.outputs.roleArn }}"
        "version": "latest"
    - "name": "deploy echo-oauth to dev"
      "run": "monad deploy --auth auth0 --image bkeane/monad/echo --disk 1024 --memory
        256 --timeout 10 --api kaixo --policy file://e2e/echo/policy.json.tmpl --rule
        file://e2e/echo/rule.json.tmpl --env file://e2e/echo/.env.tmpl"
  "deploy-dev-echo-vpc":
    "env":
      "MONAD_SERVICE": "echo-vpc"
    "if": "needs.dev.outputs.pass == 'true'"
    "name": "deploy echo-vpc"
    "needs": "dev"
    "permissions":
      "contents": "read"
      "id-token": "write"
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "dev spoke config"
      "uses": "bkeane/monad-action@main"
      "with":
        "registry_id": "${{ env.MONAD_REGISTRY_ID }}"
        "registry_region": "${{ env.MONAD_REGISTRY_REGION }}"
        "role_arn": "${{ needs.dev.outputs.roleArn }}"
        "version": "latest"
    - "name": "deploy echo-vpc to dev"
      "run": "monad deploy --image bkeane/monad/echo --disk 1024 --memory 256 --timeout
        10 --api kaixo --policy file://e2e/echo/policy.json.tmpl --rule file://e2e/echo/rule.json.tmpl
        --env file://e2e/echo/.env.tmpl --sg-ids basic --sn-ids private-a,private-b"
  "deploy-prod-echo":
    "env":
      "MONAD_SERVICE": "echo"
    "if": "needs.prod.outputs.pass == 'true'"
    "name": "deploy echo"
    "needs": "prod"
    "permissions":
      "contents": "read"
      "id-token": "write"
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "prod spoke config"
      "uses": "bkeane/monad-action@main"
      "with":
        "registry_id": "${{ env.MONAD_REGISTRY_ID }}"
        "registry_region": "${{ env.MONAD_REGISTRY_REGION }}"
        "role_arn": "${{ needs.prod.outputs.roleArn }}"
        "version": "latest"
    - "name": "deploy echo to prod"
      "run": "monad deploy --image bkeane/monad/echo --disk 1024 --memory 256 --timeout
        10 --api kaixo --policy file://e2e/echo/policy.json.tmpl --rule file://e2e/echo/rule.json.tmpl
        --env file://e2e/echo/.env.tmpl"
  "deploy-prod-echo-oauth":
    "env":
      "MONAD_SERVICE": "echo-oauth"
    "if": "needs.prod.outputs.pass == 'true'"
    "name": "deploy echo-oauth"
    "needs": "prod"
    "permissions":
      "contents": "read"
      "id-token": "write"
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "prod spoke config"
      "uses": "bkeane/monad-action@main"
      "with":
        "registry_id": "${{ env.MONAD_REGISTRY_ID }}"
        "registry_region": "${{ env.MONAD_REGISTRY_REGION }}"
        "role_arn": "${{ needs.prod.outputs.roleArn }}"
        "version": "latest"
    - "name": "deploy echo-oauth to prod"
      "run": "monad deploy --auth auth0 --image bkeane/monad/echo --disk 1024 --memory
        256 --timeout 10 --api kaixo --policy file://e2e/echo/policy.json.tmpl --rule
        file://e2e/echo/rule.json.tmpl --env file://e2e/echo/.env.tmpl"
  "deploy-prod-echo-vpc":
    "env":
      "MONAD_SERVICE": "echo-vpc"
    "if": "needs.prod.outputs.pass == 'true'"
    "name": "deploy echo-vpc"
    "needs": "prod"
    "permissions":
      "contents": "read"
      "id-token": "write"
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "prod spoke config"
      "uses": "bkeane/monad-action@main"
      "with":
        "registry_id": "${{ env.MONAD_REGISTRY_ID }}"
        "registry_region": "${{ env.MONAD_REGISTRY_REGION }}"
        "role_arn": "${{ needs.prod.outputs.roleArn }}"
        "version": "latest"
    - "name": "deploy echo-vpc to prod"
      "run": "monad deploy --image bkeane/monad/echo --disk 1024 --memory 256 --timeout
        10 --api kaixo --policy file://e2e/echo/policy.json.tmpl --rule file://e2e/echo/rule.json.tmpl
        --env file://e2e/echo/.env.tmpl --sg-ids basic --sn-ids private-a,private-b"
  "dev":
    "name": "dev"
    "outputs":
      "pass": "${{ steps.branch-check.outputs.pass }}"
      "roleArn": "${{ steps.branch-check.outputs.roleArn }}"
    "permissions":
      "contents": "read"
      "id-token": "write"
    "runs-on": "ubuntu-latest"
    "steps":
    - "env":
        "ACCOUNT_BRANCHES": "*"
        "ACCOUNT_ROLE_ARN": "arn:aws:iam::831926600600:role/monad-spoke-oidc-role"
      "id": "branch-check"
      "uses": "actions/github-script@v7"
      "with":
        "script": |
          const branch = process.env.MONAD_BRANCH;
          const accepted = process.env.ACCOUNT_BRANCHES.split(',').map(b => b.trim());
          const pass = accepted.includes("*") || accepted.includes(branch)
          console.log("branch:", branch);
          console.log("accepted:", accepted);
          console.log("deploy:", pass);
          core.setOutput("pass", pass);
          core.setOutput("roleArn", process.env.ACCOUNT_ROLE_ARN);
  "prod":
    "name": "prod"
    "outputs":
      "pass": "${{ steps.branch-check.outputs.pass }}"
      "roleArn": "${{ steps.branch-check.outputs.roleArn }}"
    "permissions":
      "contents": "read"
      "id-token": "write"
    "runs-on": "ubuntu-latest"
    "steps":
    - "env":
        "ACCOUNT_BRANCHES": "main"
        "ACCOUNT_ROLE_ARN": "arn:aws:iam::677771948337:role/monad-spoke-oidc-role"
      "id": "branch-check"
      "uses": "actions/github-script@v7"
      "with":
        "script": |
          const branch = process.env.MONAD_BRANCH;
          const accepted = process.env.ACCOUNT_BRANCHES.split(',').map(b => b.trim());
          const pass = accepted.includes("*") || accepted.includes(branch)
          console.log("branch:", branch);
          console.log("accepted:", accepted);
          console.log("deploy:", pass);
          core.setOutput("pass", pass);
          core.setOutput("roleArn", process.env.ACCOUNT_ROLE_ARN);
"name": "Up"
"on":
  "workflow_call": {}
